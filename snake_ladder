#include<bits/stdc++.h>
using namespace std;

int dice_value(){
    int mini=1;
    int maxi=6;

    mt19937 gen(time(0));
    uniform_int_distribution<> distrib(mini, maxi);
    int randomValue = distrib(gen);

    return randomValue;
}
int players()
{
    int num;
    cout<<"Enter how much players want to play the game(MAX 4 Player, MIN 2 Players)"<<endl;
    cin>>num;
    return num;
}
vector<int>snake_ladder(vector<int>&board)
{
    board[4]=14;
    board[9]=31;
    board[21]=42;
    board[28]=84;
    board[36]=44;
    board[51]=67;
    board[71]=91;
    board[80]=98;
    board[98]=12;
    board[93]=73;
    board[95]=75;
    board[62]=19;
    board[64]=60;
    board[56]=40;
    board[87]=24;
    board[47]=26;
    board[49]=11;
    board[16]=5;
    board[50]=92;
}

int player_val(int turn,int point, int flag, int prev_value, vector<int>board)
{
    int val=0;
    if(flag)
    {
        int new_val=prev_value+point;
        if(new_val>100){
            cout<<"Sorry, exced of 100. You can't move."<<endl<<endl;
            cout<<"Player "<<turn<<", you are at position "<<prev_value<<endl<<endl;
            return prev_value;
        }
        if(board[new_val]!=0 && new_val<board[new_val])
        {
            cout<<"Congratulations, You get the ladder of "<<new_val<<endl;
            new_val=board[new_val];
        } 
        else if(board[new_val]!=0 && new_val>board[new_val]){
            cout<<"Opps!, You are bitten by the snake of "<<new_val<<endl;
            new_val=board[new_val];
        }
        cout<<"Player "<<turn<<", you are at position "<<new_val<<endl<<endl;
        val=new_val;
    }
    return val;
}

int main()
{
    vector<int>board(120,0);
    snake_ladder(board);
    int playersss=-1;
    int count=0;

    int player_one=0, flag1=0;
    int player_two=0, flag2=0;
    int player_three=0, flag3=0;
    int player_four=0, flag4=0;
    cout<<"_____ WELCOME TO SNAKE LADDER GAME_____"<<endl<<endl<<endl;
    
    while(playersss<2 || playersss>4)
    {
        if(playersss==-1){
            playersss = players();
        }
        else{
            cout<<"You enter the wrong key"<<endl;
            playersss = players();
        }
    }

    while(player_four<100 && player_three<100 && player_two<100 && player_one<100)
    {
        int point=0;
        int dice_val;
        int role=0;
        int one_count=0;
        int turn=(count%playersss)+1;
        cout<<"Turn of player "<<turn<<endl;
        // cout<<"Player "<<turn<<" enter 1 for role the dice."<<endl;
        cin>>role;
        if(role)
        {
            dice_val=dice_value();
            cout<<"your dice value is "<<dice_val<<endl<<endl;
        }
        while(dice_val==1 && one_count<3)
        {
            one_count++;
            cout<<"Player "<<turn<<" enter 1 for once again to role the dice."<<endl;
            cin>>role;
            if(role)
            {
                dice_val=dice_value();
                cout<<"your dice value is "<<dice_val<<endl<<endl;
            }
            
        }
        if(one_count>0 && one_count<3){
            point=one_count+dice_val;
            if(turn==1) flag1=1;
            else if(turn==2) flag2=1;
            else if(turn==3) flag3=1;
            else if(turn==4) flag4=1;
        }
        else{
            point=dice_val;
        }
        if(turn==1){
            player_one=player_val(turn,point,flag1,player_one,board);
        }
        else if(turn==2){
            player_two=player_val(turn,point,flag2,player_two,board);
        }
        else if(turn==3){
            player_three=player_val(turn,point,flag3,player_three,board);
        }
        else{
            player_four=player_val(turn,point,flag4,player_four,board);
        }
        count++;
    }
    if(player_one==100) cout<<"Congratulation player 1 own the game."<<endl;
    else if(player_two==100) cout<<"Congratulation player 2 own the game."<<endl;
    else if(player_three==100) cout<<"Congratulation player 3 own the game."<<endl;
    else{
        cout<<"Congratulation player 4 own the game."<<endl;
    }


    return 0;
}
