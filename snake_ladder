#include<bits/stdc++.h>
using namespace std;

class play{
    public:
    int player_val(int turn,int point, int flag, int prev_value, vector<int>board)
    {
        int val=0;
        if(flag)
        {
            int new_val=prev_value+point;
            if(new_val>100){
                cout<<"Sorry, exced of 100. You can't move."<<endl<<endl;
                cout<<"Player "<<turn<<", you are at position -----> "<<prev_value<<endl<<endl;
                return prev_value;
            }
            if(board[new_val]!=0 && new_val<board[new_val])
            {
                cout<<"Congratulations, You get the ladder of _ "<<new_val<<endl;
                new_val=board[new_val];
            } 
            else if(board[new_val]!=0 && new_val>board[new_val]){
                cout<<"Opps!, You are bitten by the snake of _ "<<new_val<<endl;
                new_val=board[new_val];
            }
            cout<<"Player "<<turn<<", you are at position -----> "<<new_val<<endl<<endl;
            val=new_val;
        }
        return val;
    }

};

int dice_value(){
    int mini=1;
    int maxi=6;

    mt19937 gen(time(0));
    uniform_int_distribution<> distrib(mini, maxi);
    int randomValue = distrib(gen);

    return randomValue;
}
int players()
{
    int num;
    cout<<"*************************************"<<endl;
    cout<<"Enter how much players want to play \nthe game(MAX 10 Player, MIN 2 Players)"<<endl;
    cout<<"*************************************"<<endl;
    cin>>num;
    return num;
}
vector<int>snake_ladder(vector<int>&board)
{
    board[4]=14;
    board[9]=31;
    board[21]=42;
    board[28]=84;
    board[36]=44;
    board[51]=67;
    board[71]=91;
    board[80]=97;
    board[98]=12;
    board[93]=73;
    board[95]=75;
    board[62]=19;
    board[64]=60;
    board[56]=40;
    board[87]=24;
    board[47]=26;
    board[49]=11;
    board[16]=5;
    board[50]=92;
}


int main()
{
    play p;
    vector<int>board(120,0);
    snake_ladder(board);
    int playersss=-1;
    int count=0;

    vector<int>player(10,0);
    vector<int>flag(10,0);
    vector<int>rankTable(10,0);
    int hundreds=0;
    int rank=0;

    cout<<"************************************"<<endl;
    cout<<"   WELCOME TO SNAKES LADDERS GAME   "<<endl;
    cout<<"************************************"<<endl;


    
    while(playersss<2 || playersss>10)                           
    {
        if(playersss==-1){
            playersss = players();
        }
        else{
            cout<<"You enter the wrong number."<<endl;
            playersss = players();
        }
    }




    while(hundreds<playersss-1)                                
    {
        int point=0;
        int dice_val;
        int role=0;
        int one_count=0;
        int turn=(count%playersss)+1;

        if(player[turn]==100){
            count++; 
            continue;
        }

        cout<<"Turn of player_"<<turn<<endl;
        cin>>role;
        if(role)
        {
            dice_val=dice_value();
            cout<<"your dice value is > "<<dice_val<<endl<<endl;
        }


        while(dice_val==1 && one_count<3 && player[turn]<100)
        {
            one_count++;
            if(player[turn]>=98){
                player[turn]+=1;
            }
            if(player[turn]==100){
                cout<<"Player "<<turn<<", you are at position -----> "<<player[turn]<<endl<<endl;
                dice_val=0;
                break;
            }
            cout<<"Player "<<turn<<" enter 1 for once again to role the dice."<<endl;
            cin>>role;
            if(role)
            {
                dice_val=dice_value();   
                cout<<"your dice value is > "<<dice_val<<endl<<endl;
            }
            
        }


        if(one_count>0 && one_count<3){
            if(player[turn]+dice_val>100){
                player[turn]-=one_count;
            }
            point=one_count+dice_val;
            flag[turn]=1;                           
        }
        else{
            point=dice_val;
        }


        if(player[turn] != 100){
            player[turn] = p.player_val(turn,point,flag[turn],player[turn],board);
        }
        if(player[turn]==100){
            rankTable[rank]=turn;
            rank++;
            hundreds++;
        }
        count++;
    }
    
    cout<<"***********************************"<<endl;
    for(int i=0;i<playersss-1;i++){
        cout<<"Congratulation player "<<rankTable[i]<<" became no "<<i+1 <<endl;
    }
    cout<<"***********************************"<<endl;


    return 0;
}
